
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACTION_KEY ADL_KEY AND_KEY CONDITIONAL_EFFECTS_KEY CONJUNCTION CONSTANTS_KEY DEFINE_KEY DERIVED_KEY DERIVED_PREDICATES_KEY DISJUNCTIVE_PRECONDITIONS_KEY DOMAIN_KEY EFFECT_KEY EQUALITY_KEY EQUALS EXISTENTIAL_PRECONDITIONS_KEY EXISTS_KEY FORALL_KEY GOAL_KEY HYPHEN INIT_KEY LPAREN NAME NEGATIVE_PRECONDITIONS_KEY NON_DETERMINISTIC_KEY NOT_KEY OBJECTS_KEY ONEOF_KEY OR_KEY PARAMETERS_KEY PRECONDITION_KEY PREDICATES_KEY PROBABILISTIC_EFFECTS_KEY PROBABILISTIC_KEY PROBABILITY PROBLEM_KEY REQUIREMENTS_KEY RPAREN STRIPS_KEY TYPES_KEY TYPING_KEY UNIVERSAL_PRECONDITIONS_KEY VARIABLE WHEN_KEYpddl : domain\n            | problem\n            | domain problemdomain : LPAREN DEFINE_KEY domain_structure_def_lst RPARENdomain_structure_def_lst : domain_structure_def domain_structure_def_lst\n                         | domain_structure_defdomain_structure_def : domain_def\n                     | require_def \n                     | types_def \n                     | constants_def \n                     | predicates_def\n                     | derived_predicates_def\n                     | action_def_lstdomain_def : LPAREN DOMAIN_KEY NAME RPARENrequire_def : LPAREN REQUIREMENTS_KEY require_key_lst RPARENrequire_key_lst : require_key require_key_lst\n                       | require_keyrequire_key : ADL_KEY\n                   | STRIPS_KEY\n                   | EQUALITY_KEY\n                   | TYPING_KEY\n                   | PROBABILISTIC_EFFECTS_KEY\n                   | NON_DETERMINISTIC_KEY\n                   | CONDITIONAL_EFFECTS_KEY\n                   | EXISTENTIAL_PRECONDITIONS_KEY\n                   | NEGATIVE_PRECONDITIONS_KEY\n                   | UNIVERSAL_PRECONDITIONS_KEY\n                   | DISJUNCTIVE_PRECONDITIONS_KEY\n                   | DERIVED_PREDICATES_KEYtypes_def : LPAREN TYPES_KEY typed_names_lst RPARENconstants_def : LPAREN CONSTANTS_KEY typed_constants_lst RPARENpredicates_def : LPAREN PREDICATES_KEY predicate_def_lst RPARENpredicate_def_lst : predicate_def predicate_def_lst\n                         | predicate_defpredicate_def : LPAREN NAME typed_variables_lst RPAREN\n                     | LPAREN NAME RPARENderived_predicates_def_lst : derived_predicates_def derived_predicates_def_lst\n                                  | derived_predicates_defderived_predicates_def :\n               | LPAREN DERIVED_KEY LPAREN NAME typed_variables_lst RPAREN precond RPAREN\n               | LPAREN DERIVED_KEY LPAREN NAME typed_variables_lst RPAREN LPAREN AND_KEY preconds_lst RPAREN RPAREN\n               | LPAREN DERIVED_KEY LPAREN NAME typed_variables_lst RPAREN LPAREN OR_KEY preconds_lst RPAREN RPAREN\n               | LPAREN DERIVED_KEY LPAREN NAME RPAREN precond RPAREN\n               | LPAREN DERIVED_KEY LPAREN NAME RPAREN LPAREN AND_KEY preconds_lst RPAREN RPAREN\n               | LPAREN DERIVED_KEY LPAREN NAME RPAREN LPAREN OR_KEY preconds_lst RPAREN RPARENaction_def_lst : action_def action_def_lst\n                      | action_defaction_def : LPAREN ACTION_KEY NAME action_def_body_list RPARENaction_def_body_list : action_def_body action_def_body_list\n                            | action_def_bodyaction_def_body : parameters_def\n                       | precond_def\n                       | effect_defparameters_def : PARAMETERS_KEY LPAREN typed_variables_lst RPAREN\n                      | PARAMETERS_KEY LPAREN RPARENprecond_def : PRECONDITION_KEY LPAREN AND_KEY preconds_lst RPAREN\n                   | PRECONDITION_KEY LPAREN RPAREN\n                   | PRECONDITION_KEY precondpreconds_lst : precond preconds_lst\n                    | precondprecond : literal\n               | universal_precond\n               | existential_preconduniversal_precond :\n               | LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN\n               | LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPARENexistential_precond :\n               | LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN literal RPAREN\n               | LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPARENeffect_def : EFFECT_KEY LPAREN AND_KEY effect_lst RPAREN\n                  | EFFECT_KEY effecteffect_lst : effect effect_lst\n                  | effecteffect : literal\n              | conditional_for_eff\n              | conditional_when_eff\n              | LPAREN PROBABILISTIC_KEY prob_effect_lst RPAREN\n              | LPAREN ONEOF_KEY nd_effect_lst RPAREN\n              | LPAREN AND_KEY RPARENnd_effect_lst : nd_effect nd_effect_lst\n                     | nd_effectnd_effect : LPAREN AND_KEY effect_lst RPAREN\n                 | effectprob_effect_lst : prob_effect prob_effect_lst\n                       | prob_effectprob_effect : PROBABILITY LPAREN AND_KEY effect_lst RPAREN\n                   | PROBABILITY effectconditional_for_eff :\n               | LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN conditional_when_eff RPAREN\n               | LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN\n               | LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPARENconditional_when_eff :\n               | LPAREN WHEN_KEY literal literal RPAREN\n               | LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN literal RPAREN\n               | LPAREN WHEN_KEY literal LPAREN AND_KEY literals_lst RPAREN RPAREN\n               | LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN\n               literals_lst : literal literals_lst\n                    | literalliteral : LPAREN NOT_KEY predicate RPAREN\n               | predicateground_predicates_lst : ground_predicate ground_predicates_lst\n                             | ground_predicatepredicate : LPAREN NAME arguments_lst RPAREN\n                 | LPAREN EQUALS VARIABLE VARIABLE RPAREN\n                 | LPAREN EQUALS VARIABLE constant RPAREN\n                 | LPAREN EQUALS constant VARIABLE RPAREN\n                 | LPAREN NAME RPARENarguments_lst : constant arguments_lst\n                     | VARIABLE arguments_lst\n                     | constant\n                     | VARIABLEground_predicate : LPAREN NAME constants_lst RPAREN\n                        | LPAREN NAME RPARENtyped_constants_lst : constants_lst HYPHEN type typed_constants_lst\n                           | constants_lst HYPHEN typetyped_variables_lst : variables_lst HYPHEN type typed_variables_lst\n                           | variables_lst HYPHEN typeconstants_lst : constant constants_lst\n                     | constantvariables_lst : VARIABLE variables_lst\n                     | VARIABLEtyped_names_lst : names_lst HYPHEN type typed_names_lst\n                       | names_lst HYPHEN type\n                       | names_lstnames_lst : NAME names_lst\n                 | NAMEproblem : LPAREN DEFINE_KEY problem_structure_def_lst RPARENproblem_structure_def_lst : problem_structure_def problem_structure_def_lst\n                                 | problem_structure_defproblem_structure_def : problem_def\n                             | domain_def\n                             | objects_def\n                             | init_def\n                             | goal_defproblem_def : LPAREN PROBLEM_KEY NAME RPARENobjects_def : LPAREN OBJECTS_KEY typed_constants_lst RPARENinit_def : LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN\n                | LPAREN INIT_KEY ground_predicates_lst RPARENgoal_def : LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN\n                | LPAREN GOAL_KEY ground_predicates_lst RPARENtype : NAMEconstant : NAME'
    
_lr_action_items = {'LPAREN':([0,2,7,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,32,33,36,37,39,42,45,71,77,81,82,84,87,91,94,95,96,98,101,102,108,109,110,115,119,122,124,129,130,131,132,135,136,137,140,143,147,151,153,154,155,158,160,161,162,166,167,168,169,170,174,180,187,188,191,194,195,198,200,201,202,207,210,219,223,224,227,234,235,236,237,238,239,241,244,245,246,249,250,256,260,263,264,265,266,267,268,270,271,272,279,280,281,286,287,288,290,],[4,6,9,26,43,26,-7,-8,-9,-10,-11,-12,-13,-130,-132,-133,-134,46,-131,69,72,75,78,-4,-7,-46,69,100,-14,-15,-30,-31,-32,-135,-136,100,-138,100,-140,126,127,133,-36,144,-113,-48,-61,-62,-63,-100,-74,-75,-76,-35,164,-112,172,175,177,178,185,192,196,197,172,172,-43,-137,-139,172,-107,-79,185,221,192,-83,228,172,172,-40,-99,-103,-77,185,-78,242,251,253,-104,-105,-106,185,257,242,242,-93,-44,-45,-82,273,-41,-42,242,-65,242,-68,242,-89,-90,242,-94,-95,-66,-69,-91,-96,]),'$end':([1,2,3,5,39,40,],[0,-1,-2,-3,-4,-127,]),'DEFINE_KEY':([4,6,],[7,8,]),'RPAREN':([7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,41,42,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,70,71,73,74,76,77,79,81,82,83,84,86,87,89,90,91,92,93,94,95,97,98,99,102,103,104,105,106,107,109,110,111,112,113,114,115,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,143,145,146,147,148,149,150,151,152,156,158,160,163,165,166,167,168,169,170,171,173,174,176,179,180,181,182,186,187,188,189,190,191,193,194,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,222,223,224,225,226,229,230,231,232,233,236,237,238,239,240,241,243,244,246,247,248,249,250,252,254,255,256,258,259,261,262,263,264,266,268,269,271,272,274,275,276,277,278,280,281,282,283,284,285,286,287,288,289,290,],[-39,39,40,-6,-129,-7,-8,-9,-10,-11,-12,-13,-130,-132,-133,-134,-47,-131,-5,-7,-128,-46,81,82,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,84,-124,-126,87,-119,-142,91,-34,94,95,98,-102,102,-14,-15,-16,-30,-125,-31,-118,115,-32,-33,119,-135,-136,122,-138,-101,-140,124,-50,-51,-52,-53,-64,-88,-123,-141,-115,140,-36,143,-64,146,147,-113,148,-48,-49,150,152,-58,-61,-62,-63,-100,-71,-74,-75,-76,-122,-114,-35,-64,168,169,-112,170,171,-55,-64,-57,180,187,-88,-117,202,-64,-64,-43,-137,-139,-54,205,-60,207,210,-107,-110,-111,217,-79,-73,219,-85,-88,224,-81,-83,-116,-64,-64,-40,232,233,-56,-59,-99,234,235,-103,-108,-109,236,237,238,187,-70,-72,-77,-84,-87,187,-78,-80,241,246,247,248,249,250,-104,-105,-106,187,256,-92,260,-98,-93,263,264,-44,-45,266,268,269,-82,271,272,-97,275,-41,-42,-65,-68,-86,-89,-90,280,281,282,283,284,-94,-95,286,287,288,289,-66,-69,-91,290,-96,]),'DOMAIN_KEY':([9,26,43,],[28,28,28,]),'REQUIREMENTS_KEY':([9,43,],[29,29,]),'TYPES_KEY':([9,43,],[30,30,]),'CONSTANTS_KEY':([9,43,],[31,31,]),'PREDICATES_KEY':([9,43,],[32,32,]),'DERIVED_KEY':([9,43,],[33,33,]),'PROBLEM_KEY':([9,26,],[34,34,]),'OBJECTS_KEY':([9,26,],[35,35,]),'INIT_KEY':([9,26,],[36,36,]),'GOAL_KEY':([9,26,],[37,37,]),'ACTION_KEY':([9,43,46,],[38,38,38,]),'NAME':([28,30,31,34,35,38,64,67,68,69,72,75,78,85,88,97,100,111,112,113,127,133,141,144,156,157,164,172,175,181,182,183,185,192,197,221,228,242,251,253,257,273,],[47,64,68,73,68,80,64,68,-142,90,93,97,97,112,112,68,97,64,-141,68,156,156,112,156,68,68,156,156,156,68,68,68,156,156,156,156,156,156,156,156,156,156,]),'ADL_KEY':([29,49,50,51,52,53,54,55,56,57,58,59,60,61,],[50,50,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,]),'STRIPS_KEY':([29,49,50,51,52,53,54,55,56,57,58,59,60,61,],[51,51,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,]),'EQUALITY_KEY':([29,49,50,51,52,53,54,55,56,57,58,59,60,61,],[52,52,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,]),'TYPING_KEY':([29,49,50,51,52,53,54,55,56,57,58,59,60,61,],[53,53,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,]),'PROBABILISTIC_EFFECTS_KEY':([29,49,50,51,52,53,54,55,56,57,58,59,60,61,],[54,54,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,]),'NON_DETERMINISTIC_KEY':([29,49,50,51,52,53,54,55,56,57,58,59,60,61,],[55,55,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,]),'CONDITIONAL_EFFECTS_KEY':([29,49,50,51,52,53,54,55,56,57,58,59,60,61,],[56,56,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,]),'EXISTENTIAL_PRECONDITIONS_KEY':([29,49,50,51,52,53,54,55,56,57,58,59,60,61,],[57,57,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,]),'NEGATIVE_PRECONDITIONS_KEY':([29,49,50,51,52,53,54,55,56,57,58,59,60,61,],[58,58,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,]),'UNIVERSAL_PRECONDITIONS_KEY':([29,49,50,51,52,53,54,55,56,57,58,59,60,61,],[59,59,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,]),'DISJUNCTIVE_PRECONDITIONS_KEY':([29,49,50,51,52,53,54,55,56,57,58,59,60,61,],[60,60,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,]),'DERIVED_PREDICATES_KEY':([29,49,50,51,52,53,54,55,56,57,58,59,60,61,],[61,61,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,]),'HYPHEN':([63,64,66,67,68,86,89,116,117,142,],[85,-126,88,-119,-142,-125,-118,141,-121,-120,]),'VARIABLE':([68,90,93,112,117,126,156,157,163,177,178,181,182,183,184,196,],[-142,117,117,-141,117,117,182,183,117,117,117,182,182,213,215,117,]),'AND_KEY':([75,78,127,133,144,164,185,192,197,221,228,251,253,257,273,],[96,101,151,158,166,200,216,223,227,239,245,265,267,270,279,]),'PARAMETERS_KEY':([80,104,105,106,107,109,110,128,129,130,131,132,134,135,136,137,150,152,171,180,187,205,207,210,217,219,224,236,237,238,246,266,268,271,272,280,281,286,287,288,290,],[108,108,-51,-52,-53,-64,-88,-58,-61,-62,-63,-100,-71,-74,-75,-76,-55,-57,-54,-107,-79,-56,-99,-103,-70,-77,-78,-104,-105,-106,-93,-65,-68,-89,-90,-94,-95,-66,-69,-91,-96,]),'PRECONDITION_KEY':([80,104,105,106,107,109,110,128,129,130,131,132,134,135,136,137,150,152,171,180,187,205,207,210,217,219,224,236,237,238,246,266,268,271,272,280,281,286,287,288,290,],[109,109,-51,-52,-53,-64,-88,-58,-61,-62,-63,-100,-71,-74,-75,-76,-55,-57,-54,-107,-79,-56,-99,-103,-70,-77,-78,-104,-105,-106,-93,-65,-68,-89,-90,-94,-95,-66,-69,-91,-96,]),'EFFECT_KEY':([80,104,105,106,107,109,110,128,129,130,131,132,134,135,136,137,150,152,171,180,187,205,207,210,217,219,224,236,237,238,246,266,268,271,272,280,281,286,287,288,290,],[110,110,-51,-52,-53,-64,-88,-58,-61,-62,-63,-100,-71,-74,-75,-76,-55,-57,-54,-107,-79,-56,-99,-103,-70,-77,-78,-104,-105,-106,-93,-65,-68,-89,-90,-94,-95,-66,-69,-91,-96,]),'NOT_KEY':([127,133,144,164,172,185,192,197,221,228,242,251,253,257,273,],[153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,]),'FORALL_KEY':([127,133,144,164,172,185,192,221,],[154,161,154,154,154,161,161,161,]),'EXISTS_KEY':([127,144,164,172,],[155,155,155,155,]),'EQUALS':([127,133,144,164,172,175,185,192,197,221,228,242,251,253,257,273,],[157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,]),'PROBABILITY':([132,135,136,137,159,180,187,190,191,207,210,219,222,224,236,237,238,246,269,271,272,280,281,288,290,],[-100,-74,-75,-76,191,-107,-79,191,-88,-99,-103,-77,-87,-78,-104,-105,-106,-93,-86,-89,-90,-94,-95,-91,-96,]),'PROBABILISTIC_KEY':([133,185,192,221,],[159,159,159,159,]),'ONEOF_KEY':([133,185,192,221,],[160,160,160,160,]),'WHEN_KEY':([133,185,192,221,257,],[162,162,162,162,162,]),'OR_KEY':([144,164,],[167,201,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'pddl':([0,],[1,]),'domain':([0,],[2,]),'problem':([0,2,],[3,5,]),'domain_structure_def_lst':([7,12,],[10,41,]),'problem_structure_def_lst':([7,8,13,],[11,11,44,]),'domain_structure_def':([7,12,],[12,12,]),'problem_structure_def':([7,8,13,],[13,13,13,]),'domain_def':([7,8,12,13,],[14,27,42,27,]),'require_def':([7,12,],[15,15,]),'types_def':([7,12,],[16,16,]),'constants_def':([7,12,],[17,17,]),'predicates_def':([7,12,],[18,18,]),'derived_predicates_def':([7,12,],[19,19,]),'action_def_lst':([7,12,25,],[20,20,45,]),'problem_def':([7,8,13,],[21,21,21,]),'objects_def':([7,8,13,],[22,22,22,]),'init_def':([7,8,13,],[23,23,23,]),'goal_def':([7,8,13,],[24,24,24,]),'action_def':([7,12,25,],[25,25,25,]),'require_key_lst':([29,49,],[48,83,]),'require_key':([29,49,],[49,49,]),'typed_names_lst':([30,111,],[62,138,]),'names_lst':([30,64,111,],[63,86,63,]),'typed_constants_lst':([31,35,113,],[65,74,139,]),'constants_lst':([31,35,67,97,113,],[66,66,89,121,66,]),'constant':([31,35,67,97,113,156,157,181,182,183,],[67,67,67,67,67,181,184,181,181,214,]),'predicate_def_lst':([32,71,],[70,92,]),'predicate_def':([32,71,],[71,71,]),'ground_predicates_lst':([36,37,77,96,101,],[76,79,99,120,123,]),'ground_predicate':([36,37,77,96,101,],[77,77,77,77,77,]),'action_def_body_list':([80,104,],[103,125,]),'action_def_body':([80,104,],[104,104,]),'parameters_def':([80,104,],[105,105,]),'precond_def':([80,104,],[106,106,]),'effect_def':([80,104,],[107,107,]),'type':([85,88,141,],[111,113,163,]),'typed_variables_lst':([90,93,126,163,177,178,196,],[114,118,149,199,208,209,226,]),'variables_lst':([90,93,117,126,163,177,178,196,],[116,116,142,116,116,116,116,116,]),'precond':([109,119,143,151,166,167,174,200,201,],[128,145,165,174,174,174,174,174,174,]),'literal':([109,110,119,143,151,158,160,162,166,167,174,188,191,194,198,200,201,223,227,234,235,239,241,244,245,260,265,267,270,279,],[129,135,129,129,129,135,135,198,129,129,129,135,135,135,229,129,129,135,244,252,254,135,259,244,244,274,244,244,244,244,]),'universal_precond':([109,119,143,151,166,167,174,200,201,],[130,130,130,130,130,130,130,130,130,]),'existential_precond':([109,119,143,151,166,167,174,200,201,],[131,131,131,131,131,131,131,131,131,]),'predicate':([109,110,119,143,151,153,158,160,162,166,167,174,188,191,194,198,200,201,223,227,234,235,239,241,244,245,260,265,267,270,279,],[132,132,132,132,132,176,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'effect':([110,158,160,188,191,194,223,239,],[134,188,195,188,222,195,188,188,]),'conditional_for_eff':([110,158,160,188,191,194,223,239,],[136,136,136,136,136,136,136,136,]),'conditional_when_eff':([110,158,160,188,191,194,223,239,241,],[137,137,137,137,137,137,137,137,258,]),'preconds_lst':([151,166,167,174,200,201,],[173,203,204,206,230,231,]),'arguments_lst':([156,181,182,],[179,211,212,]),'effect_lst':([158,188,223,239,],[186,218,240,255,]),'prob_effect_lst':([159,190,],[189,220,]),'prob_effect':([159,190,],[190,190,]),'nd_effect_lst':([160,194,],[193,225,]),'nd_effect':([160,194,],[194,194,]),'literals_lst':([227,244,245,265,267,270,279,],[243,261,262,276,277,278,285,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> pddl","S'",1,None,None,None),
  ('pddl -> domain','pddl',1,'p_pddl','pddlparser.py',162),
  ('pddl -> problem','pddl',1,'p_pddl','pddlparser.py',163),
  ('pddl -> domain problem','pddl',2,'p_pddl','pddlparser.py',164),
  ('domain -> LPAREN DEFINE_KEY domain_structure_def_lst RPAREN','domain',4,'p_domain','pddlparser.py',172),
  ('domain_structure_def_lst -> domain_structure_def domain_structure_def_lst','domain_structure_def_lst',2,'p_domain_structure_def_lst','pddlparser.py',197),
  ('domain_structure_def_lst -> domain_structure_def','domain_structure_def_lst',1,'p_domain_structure_def_lst','pddlparser.py',198),
  ('domain_structure_def -> domain_def','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',206),
  ('domain_structure_def -> require_def','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',207),
  ('domain_structure_def -> types_def','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',208),
  ('domain_structure_def -> constants_def','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',209),
  ('domain_structure_def -> predicates_def','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',210),
  ('domain_structure_def -> derived_predicates_def','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',211),
  ('domain_structure_def -> action_def_lst','domain_structure_def',1,'p_domain_structure_def','pddlparser.py',212),
  ('domain_def -> LPAREN DOMAIN_KEY NAME RPAREN','domain_def',4,'p_domain_def','pddlparser.py',217),
  ('require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN','require_def',4,'p_require_def','pddlparser.py',222),
  ('require_key_lst -> require_key require_key_lst','require_key_lst',2,'p_require_key_lst','pddlparser.py',227),
  ('require_key_lst -> require_key','require_key_lst',1,'p_require_key_lst','pddlparser.py',228),
  ('require_key -> ADL_KEY','require_key',1,'p_require_key','pddlparser.py',236),
  ('require_key -> STRIPS_KEY','require_key',1,'p_require_key','pddlparser.py',237),
  ('require_key -> EQUALITY_KEY','require_key',1,'p_require_key','pddlparser.py',238),
  ('require_key -> TYPING_KEY','require_key',1,'p_require_key','pddlparser.py',239),
  ('require_key -> PROBABILISTIC_EFFECTS_KEY','require_key',1,'p_require_key','pddlparser.py',240),
  ('require_key -> NON_DETERMINISTIC_KEY','require_key',1,'p_require_key','pddlparser.py',241),
  ('require_key -> CONDITIONAL_EFFECTS_KEY','require_key',1,'p_require_key','pddlparser.py',242),
  ('require_key -> EXISTENTIAL_PRECONDITIONS_KEY','require_key',1,'p_require_key','pddlparser.py',243),
  ('require_key -> NEGATIVE_PRECONDITIONS_KEY','require_key',1,'p_require_key','pddlparser.py',244),
  ('require_key -> UNIVERSAL_PRECONDITIONS_KEY','require_key',1,'p_require_key','pddlparser.py',245),
  ('require_key -> DISJUNCTIVE_PRECONDITIONS_KEY','require_key',1,'p_require_key','pddlparser.py',246),
  ('require_key -> DERIVED_PREDICATES_KEY','require_key',1,'p_require_key','pddlparser.py',247),
  ('types_def -> LPAREN TYPES_KEY typed_names_lst RPAREN','types_def',4,'p_types_def','pddlparser.py',252),
  ('constants_def -> LPAREN CONSTANTS_KEY typed_constants_lst RPAREN','constants_def',4,'p_constants_def','pddlparser.py',262),
  ('predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN','predicates_def',4,'p_predicates_def','pddlparser.py',272),
  ('predicate_def_lst -> predicate_def predicate_def_lst','predicate_def_lst',2,'p_predicate_def_lst','pddlparser.py',277),
  ('predicate_def_lst -> predicate_def','predicate_def_lst',1,'p_predicate_def_lst','pddlparser.py',278),
  ('predicate_def -> LPAREN NAME typed_variables_lst RPAREN','predicate_def',4,'p_predicate_def','pddlparser.py',286),
  ('predicate_def -> LPAREN NAME RPAREN','predicate_def',3,'p_predicate_def','pddlparser.py',287),
  ('derived_predicates_def_lst -> derived_predicates_def derived_predicates_def_lst','derived_predicates_def_lst',2,'p_derived_predicates_def_lst','pddlparser.py',296),
  ('derived_predicates_def_lst -> derived_predicates_def','derived_predicates_def_lst',1,'p_derived_predicates_def_lst','pddlparser.py',297),
  ('derived_predicates_def -> <empty>','derived_predicates_def',0,'p_derived_predicates_def','pddlparser.py',305),
  ('derived_predicates_def -> LPAREN DERIVED_KEY LPAREN NAME typed_variables_lst RPAREN precond RPAREN','derived_predicates_def',8,'p_derived_predicates_def','pddlparser.py',306),
  ('derived_predicates_def -> LPAREN DERIVED_KEY LPAREN NAME typed_variables_lst RPAREN LPAREN AND_KEY preconds_lst RPAREN RPAREN','derived_predicates_def',11,'p_derived_predicates_def','pddlparser.py',307),
  ('derived_predicates_def -> LPAREN DERIVED_KEY LPAREN NAME typed_variables_lst RPAREN LPAREN OR_KEY preconds_lst RPAREN RPAREN','derived_predicates_def',11,'p_derived_predicates_def','pddlparser.py',308),
  ('derived_predicates_def -> LPAREN DERIVED_KEY LPAREN NAME RPAREN precond RPAREN','derived_predicates_def',7,'p_derived_predicates_def','pddlparser.py',309),
  ('derived_predicates_def -> LPAREN DERIVED_KEY LPAREN NAME RPAREN LPAREN AND_KEY preconds_lst RPAREN RPAREN','derived_predicates_def',10,'p_derived_predicates_def','pddlparser.py',310),
  ('derived_predicates_def -> LPAREN DERIVED_KEY LPAREN NAME RPAREN LPAREN OR_KEY preconds_lst RPAREN RPAREN','derived_predicates_def',10,'p_derived_predicates_def','pddlparser.py',311),
  ('action_def_lst -> action_def action_def_lst','action_def_lst',2,'p_action_def_lst','pddlparser.py',344),
  ('action_def_lst -> action_def','action_def_lst',1,'p_action_def_lst','pddlparser.py',345),
  ('action_def -> LPAREN ACTION_KEY NAME action_def_body_list RPAREN','action_def',5,'p_action_def','pddlparser.py',353),
  ('action_def_body_list -> action_def_body action_def_body_list','action_def_body_list',2,'p_action_def_body_list','pddlparser.py',371),
  ('action_def_body_list -> action_def_body','action_def_body_list',1,'p_action_def_body_list','pddlparser.py',372),
  ('action_def_body -> parameters_def','action_def_body',1,'p_action_def_body','pddlparser.py',380),
  ('action_def_body -> precond_def','action_def_body',1,'p_action_def_body','pddlparser.py',381),
  ('action_def_body -> effect_def','action_def_body',1,'p_action_def_body','pddlparser.py',382),
  ('parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN','parameters_def',4,'p_parameters_def','pddlparser.py',387),
  ('parameters_def -> PARAMETERS_KEY LPAREN RPAREN','parameters_def',3,'p_parameters_def','pddlparser.py',388),
  ('precond_def -> PRECONDITION_KEY LPAREN AND_KEY preconds_lst RPAREN','precond_def',5,'p_precond_def','pddlparser.py',396),
  ('precond_def -> PRECONDITION_KEY LPAREN RPAREN','precond_def',3,'p_precond_def','pddlparser.py',397),
  ('precond_def -> PRECONDITION_KEY precond','precond_def',2,'p_precond_def','pddlparser.py',398),
  ('preconds_lst -> precond preconds_lst','preconds_lst',2,'p_preconds_lst','pddlparser.py',419),
  ('preconds_lst -> precond','preconds_lst',1,'p_preconds_lst','pddlparser.py',420),
  ('precond -> literal','precond',1,'p_precond','pddlparser.py',428),
  ('precond -> universal_precond','precond',1,'p_precond','pddlparser.py',429),
  ('precond -> existential_precond','precond',1,'p_precond','pddlparser.py',430),
  ('universal_precond -> <empty>','universal_precond',0,'p_universal_precond','pddlparser.py',435),
  ('universal_precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN','universal_precond',7,'p_universal_precond','pddlparser.py',436),
  ('universal_precond -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN','universal_precond',10,'p_universal_precond','pddlparser.py',437),
  ('existential_precond -> <empty>','existential_precond',0,'p_existential_precond','pddlparser.py',445),
  ('existential_precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN literal RPAREN','existential_precond',7,'p_existential_precond','pddlparser.py',446),
  ('existential_precond -> LPAREN EXISTS_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN','existential_precond',10,'p_existential_precond','pddlparser.py',447),
  ('effect_def -> EFFECT_KEY LPAREN AND_KEY effect_lst RPAREN','effect_def',5,'p_effect_def','pddlparser.py',455),
  ('effect_def -> EFFECT_KEY effect','effect_def',2,'p_effect_def','pddlparser.py',456),
  ('effect_lst -> effect effect_lst','effect_lst',2,'p_effect_lst','pddlparser.py',495),
  ('effect_lst -> effect','effect_lst',1,'p_effect_lst','pddlparser.py',496),
  ('effect -> literal','effect',1,'p_effect','pddlparser.py',504),
  ('effect -> conditional_for_eff','effect',1,'p_effect','pddlparser.py',505),
  ('effect -> conditional_when_eff','effect',1,'p_effect','pddlparser.py',506),
  ('effect -> LPAREN PROBABILISTIC_KEY prob_effect_lst RPAREN','effect',4,'p_effect','pddlparser.py',507),
  ('effect -> LPAREN ONEOF_KEY nd_effect_lst RPAREN','effect',4,'p_effect','pddlparser.py',508),
  ('effect -> LPAREN AND_KEY RPAREN','effect',3,'p_effect','pddlparser.py',509),
  ('nd_effect_lst -> nd_effect nd_effect_lst','nd_effect_lst',2,'p_nd_effect_lst','pddlparser.py',521),
  ('nd_effect_lst -> nd_effect','nd_effect_lst',1,'p_nd_effect_lst','pddlparser.py',522),
  ('nd_effect -> LPAREN AND_KEY effect_lst RPAREN','nd_effect',4,'p_nd_effect','pddlparser.py',530),
  ('nd_effect -> effect','nd_effect',1,'p_nd_effect','pddlparser.py',531),
  ('prob_effect_lst -> prob_effect prob_effect_lst','prob_effect_lst',2,'p_prob_effect_lst','pddlparser.py',539),
  ('prob_effect_lst -> prob_effect','prob_effect_lst',1,'p_prob_effect_lst','pddlparser.py',540),
  ('prob_effect -> PROBABILITY LPAREN AND_KEY effect_lst RPAREN','prob_effect',5,'p_prob_effect','pddlparser.py',548),
  ('prob_effect -> PROBABILITY effect','prob_effect',2,'p_prob_effect','pddlparser.py',549),
  ('conditional_for_eff -> <empty>','conditional_for_eff',0,'p_conditional_for_eff','pddlparser.py',557),
  ('conditional_for_eff -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN conditional_when_eff RPAREN','conditional_for_eff',7,'p_conditional_for_eff','pddlparser.py',558),
  ('conditional_for_eff -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN literal RPAREN','conditional_for_eff',7,'p_conditional_for_eff','pddlparser.py',559),
  ('conditional_for_eff -> LPAREN FORALL_KEY LPAREN typed_variables_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN','conditional_for_eff',10,'p_conditional_for_eff','pddlparser.py',560),
  ('conditional_when_eff -> <empty>','conditional_when_eff',0,'p_conditional_when_eff','pddlparser.py',571),
  ('conditional_when_eff -> LPAREN WHEN_KEY literal literal RPAREN','conditional_when_eff',5,'p_conditional_when_eff','pddlparser.py',572),
  ('conditional_when_eff -> LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN literal RPAREN','conditional_when_eff',8,'p_conditional_when_eff','pddlparser.py',573),
  ('conditional_when_eff -> LPAREN WHEN_KEY literal LPAREN AND_KEY literals_lst RPAREN RPAREN','conditional_when_eff',8,'p_conditional_when_eff','pddlparser.py',574),
  ('conditional_when_eff -> LPAREN WHEN_KEY LPAREN AND_KEY literals_lst RPAREN LPAREN AND_KEY literals_lst RPAREN RPAREN','conditional_when_eff',11,'p_conditional_when_eff','pddlparser.py',575),
  ('literals_lst -> literal literals_lst','literals_lst',2,'p_literals_lst','pddlparser.py',589),
  ('literals_lst -> literal','literals_lst',1,'p_literals_lst','pddlparser.py',590),
  ('literal -> LPAREN NOT_KEY predicate RPAREN','literal',4,'p_literal','pddlparser.py',598),
  ('literal -> predicate','literal',1,'p_literal','pddlparser.py',599),
  ('ground_predicates_lst -> ground_predicate ground_predicates_lst','ground_predicates_lst',2,'p_ground_predicates_lst','pddlparser.py',607),
  ('ground_predicates_lst -> ground_predicate','ground_predicates_lst',1,'p_ground_predicates_lst','pddlparser.py',608),
  ('predicate -> LPAREN NAME arguments_lst RPAREN','predicate',4,'p_predicate','pddlparser.py',616),
  ('predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN','predicate',5,'p_predicate','pddlparser.py',617),
  ('predicate -> LPAREN EQUALS VARIABLE constant RPAREN','predicate',5,'p_predicate','pddlparser.py',618),
  ('predicate -> LPAREN EQUALS constant VARIABLE RPAREN','predicate',5,'p_predicate','pddlparser.py',619),
  ('predicate -> LPAREN NAME RPAREN','predicate',3,'p_predicate','pddlparser.py',620),
  ('arguments_lst -> constant arguments_lst','arguments_lst',2,'p_arguments_lst','pddlparser.py',630),
  ('arguments_lst -> VARIABLE arguments_lst','arguments_lst',2,'p_arguments_lst','pddlparser.py',631),
  ('arguments_lst -> constant','arguments_lst',1,'p_arguments_lst','pddlparser.py',632),
  ('arguments_lst -> VARIABLE','arguments_lst',1,'p_arguments_lst','pddlparser.py',633),
  ('ground_predicate -> LPAREN NAME constants_lst RPAREN','ground_predicate',4,'p_ground_predicate','pddlparser.py',641),
  ('ground_predicate -> LPAREN NAME RPAREN','ground_predicate',3,'p_ground_predicate','pddlparser.py',642),
  ('typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst','typed_constants_lst',4,'p_typed_constants_lst','pddlparser.py',650),
  ('typed_constants_lst -> constants_lst HYPHEN type','typed_constants_lst',3,'p_typed_constants_lst','pddlparser.py',651),
  ('typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst','typed_variables_lst',4,'p_typed_variables_lst','pddlparser.py',659),
  ('typed_variables_lst -> variables_lst HYPHEN type','typed_variables_lst',3,'p_typed_variables_lst','pddlparser.py',660),
  ('constants_lst -> constant constants_lst','constants_lst',2,'p_constants_lst','pddlparser.py',668),
  ('constants_lst -> constant','constants_lst',1,'p_constants_lst','pddlparser.py',669),
  ('variables_lst -> VARIABLE variables_lst','variables_lst',2,'p_variables_lst','pddlparser.py',677),
  ('variables_lst -> VARIABLE','variables_lst',1,'p_variables_lst','pddlparser.py',678),
  ('typed_names_lst -> names_lst HYPHEN type typed_names_lst','typed_names_lst',4,'p_typed_names_lst','pddlparser.py',686),
  ('typed_names_lst -> names_lst HYPHEN type','typed_names_lst',3,'p_typed_names_lst','pddlparser.py',687),
  ('typed_names_lst -> names_lst','typed_names_lst',1,'p_typed_names_lst','pddlparser.py',688),
  ('names_lst -> NAME names_lst','names_lst',2,'p_names_lst','pddlparser.py',698),
  ('names_lst -> NAME','names_lst',1,'p_names_lst','pddlparser.py',699),
  ('problem -> LPAREN DEFINE_KEY problem_structure_def_lst RPAREN','problem',4,'p_problem','pddlparser.py',709),
  ('problem_structure_def_lst -> problem_structure_def problem_structure_def_lst','problem_structure_def_lst',2,'p_problem_structure_def_lst','pddlparser.py',732),
  ('problem_structure_def_lst -> problem_structure_def','problem_structure_def_lst',1,'p_problem_structure_def_lst','pddlparser.py',733),
  ('problem_structure_def -> problem_def','problem_structure_def',1,'p_problem_structure_def','pddlparser.py',741),
  ('problem_structure_def -> domain_def','problem_structure_def',1,'p_problem_structure_def','pddlparser.py',742),
  ('problem_structure_def -> objects_def','problem_structure_def',1,'p_problem_structure_def','pddlparser.py',743),
  ('problem_structure_def -> init_def','problem_structure_def',1,'p_problem_structure_def','pddlparser.py',744),
  ('problem_structure_def -> goal_def','problem_structure_def',1,'p_problem_structure_def','pddlparser.py',745),
  ('problem_def -> LPAREN PROBLEM_KEY NAME RPAREN','problem_def',4,'p_problem_def','pddlparser.py',750),
  ('objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN','objects_def',4,'p_objects_def','pddlparser.py',755),
  ('init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN','init_def',7,'p_init_def','pddlparser.py',765),
  ('init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN','init_def',4,'p_init_def','pddlparser.py',766),
  ('goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN','goal_def',7,'p_goal_def','pddlparser.py',774),
  ('goal_def -> LPAREN GOAL_KEY ground_predicates_lst RPAREN','goal_def',4,'p_goal_def','pddlparser.py',775),
  ('type -> NAME','type',1,'p_type','pddlparser.py',783),
  ('constant -> NAME','constant',1,'p_constant','pddlparser.py',788),
]
